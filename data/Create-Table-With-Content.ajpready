// Create SqlServer Table with dummy contentVARIABLES	Bar Chart view : My Chart view	canvasName : myCanvas	chartVariableName : myChart	chartGetterMethodName : getMyChart	File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Phonebook TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Phonebook]		(		  Test_Phonebook		  undefined [Id] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [Name] [nvarchar](60) NULL		  		  undefined [Age] [int] NULL		  		  undefined [Phone] [nvarchar](60) NULL		  		  undefined [Description] [nvarchar](300) NULL		  		  undefined [Note] [nvarchar](300) NULL		  		  undefined [City] [nvarchar](60) NULL		  		  undefined [Street] [nvarchar](60) NULL		  		  undefined [URL] [nvarchar](50) NULL		  		  undefined [Prints] [int] NULL		  		  undefined [ActivFrom] [datetime] NULL		  		  undefined [ActivTo] [datetime] NULL		  		  undefined [IsDeliveryAddress] [bit] NULL		  		  undefined [Suspended] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------	File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Customer TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Customer]		(		  Test_Customer		  undefined [CustomerId] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [Phone] [nvarchar](60) NULL		  		  undefined [Name] [nvarchar](60) NULL		  		  undefined [URL] [nvarchar](50) NULL		  		  undefined [Age] [int] NULL		  		  undefined [Suspended] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------	File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Address TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Address]		(		  Test_Address		  undefined [AddressId] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [CustomerIdRef] [int] NULL		  		  undefined [Description] [nvarchar](300) NULL		  		  undefined [City] [nvarchar](60) NULL		  		  undefined [Street] [nvarchar](60) NULL		  		  undefined [Prints] [int] NULL		  		  undefined [ActivFrom] [datetime] NULL		  		  undefined [ActivTo] [datetime] NULL		  		  undefined [Note] [nvarchar](300) NULL		  		  undefined [IsDeliveryAddress] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------		File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Phonebook TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Phonebook]		(		  Test_Phonebook		  undefined [Id] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [Name] [nvarchar](60) NULL		  		  undefined [Age] [int] NULL		  		  undefined [Phone] [nvarchar](60) NULL		  		  undefined [Description] [nvarchar](300) NULL		  		  undefined [Note] [nvarchar](300) NULL		  		  undefined [City] [nvarchar](60) NULL		  		  undefined [Street] [nvarchar](60) NULL		  		  undefined [URL] [nvarchar](50) NULL		  		  undefined [Prints] [int] NULL		  		  undefined [ActivFrom] [datetime] NULL		  		  undefined [ActivTo] [datetime] NULL		  		  undefined [IsDeliveryAddress] [bit] NULL		  		  undefined [Suspended] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------	File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Customer TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Customer]		(		  Test_Customer		  undefined [CustomerId] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [Phone] [nvarchar](60) NULL		  		  undefined [Name] [nvarchar](60) NULL		  		  undefined [URL] [nvarchar](50) NULL		  		  undefined [Age] [int] NULL		  		  undefined [Suspended] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------	File: RUN-SQL	  *************************************************************	  # Add the canvas to the view	  AJP-SECTION Content -->	  ---------------------------		---- ---- ---- ---- ---- ---- ---- ---- CREATE Test_Address TABLE ---- ---- ---- ---- ---- ---- ---- ----		CREATE TABLE [dbo].[Test_Address]		(		  Test_Address		  undefined [AddressId] [int] IDENTITY(1,1) PRIMARY KEY		  		  undefined [CustomerIdRef] [int] NULL		  		  undefined [Description] [nvarchar](300) NULL		  		  undefined [City] [nvarchar](60) NULL		  		  undefined [Street] [nvarchar](60) NULL		  		  undefined [Prints] [int] NULL		  		  undefined [ActivFrom] [datetime] NULL		  		  undefined [ActivTo] [datetime] NULL		  		  undefined [Note] [nvarchar](300) NULL		  		  undefined [IsDeliveryAddress] [bit] NULL			  		) ON [PRIMARY]			  ---------------------------	File: RUN-SQL	*************************************************************	# Add the canvas to the view	AJP-SECTION Content -->	---------------------------	  ---- ---- ---- ---- ---- ---- ---- ---- FILL TABLE Test_Phonebook ---- ---- ---- ---- ---- ---- ---- ----		-- Duplicate keys will be ignored		-- SET IDENTITY_INSERT Test_Phonebook ON -- If you want to populate the identity column		INSERT INTO [dbo].[Test_Phonebook]		(			Test_Phonebook									undefined[Name]						undefined[Age]						undefined[Phone]												undefined[Note]						undefined[City]						undefined[Street]						undefined[URL]						undefined[Prints]						undefined[ActivFrom]						undefined[ActivTo]						undefined[IsDeliveryAddress]						undefined[Suspended]					) VALUES (			Test_Phonebook									undefined[Name]						undefined[Age]						undefined[Phone]												undefined[Note]						undefined[City]						undefined[Street]						undefined[URL]						undefined[Prints]						undefined[ActivFrom]						undefined[ActivTo]						undefined[IsDeliveryAddress]						undefined[Suspended]													undefined CONVERT([nvarchar](60), CONCAT('Name_', CAST(21 AS INT)))							undefined CONVERT([int], 9)							undefined CONVERT([nvarchar](60), CONCAT('Phone_', CAST(2 AS INT)))														undefined CONVERT([nvarchar](300), CONCAT('Note_', CAST(30 AS INT)))							undefined CONVERT([nvarchar](60), CONCAT('City_', CAST(4 AS INT)))							undefined CONVERT([nvarchar](60), CONCAT('Street_', CAST(54 AS INT)))							undefined CONVERT([nvarchar](50), CONCAT('URL_', CAST(24 AS INT)))							undefined CONVERT([int], 6)							undefined CONVERT([datetime], DATEADD(DAY, CAST(27 AS INT), GETDATE()))							undefined CONVERT([datetime], DATEADD(DAY, CAST(14 AS INT), GETDATE()))							undefined CONVERT([bit], 0)							undefined CONVERT([bit], 0)						);		-- SET IDENTITY_INSERT Test_Phonebook OFF -- To revert the identity insert to it's original value	  File: RUN-SQL	*************************************************************	# Add the canvas to the view	AJP-SECTION Content -->	---------------------------	  ---- ---- ---- ---- ---- ---- ---- ---- FILL TABLE Test_Customer ---- ---- ---- ---- ---- ---- ---- ----		-- Duplicate keys will be ignored		-- SET IDENTITY_INSERT Test_Customer ON -- If you want to populate the identity column		INSERT INTO [dbo].[Test_Customer]		(			Test_Customer									undefined[Phone]						undefined[Name]						undefined[URL]						undefined[Age]						undefined[Suspended]					) VALUES (			Test_Customer									undefined[Phone]						undefined[Name]						undefined[URL]						undefined[Age]						undefined[Suspended]													undefined CONVERT([nvarchar](60), CONCAT('Phone_', CAST(46 AS INT)))							undefined CONVERT([nvarchar](60), CONCAT('Name_', CAST(37 AS INT)))							undefined CONVERT([nvarchar](50), CONCAT('URL_', CAST(87 AS INT)))							undefined CONVERT([int], 2)							undefined CONVERT([bit], 0)						);		-- SET IDENTITY_INSERT Test_Customer OFF -- To revert the identity insert to it's original value	  File: RUN-SQL	*************************************************************	# Add the canvas to the view	AJP-SECTION Content -->	---------------------------	  ---- ---- ---- ---- ---- ---- ---- ---- FILL TABLE Test_Address ---- ---- ---- ---- ---- ---- ---- ----		-- Duplicate keys will be ignored		-- SET IDENTITY_INSERT Test_Address ON -- If you want to populate the identity column		INSERT INTO [dbo].[Test_Address]		(			Test_Address									undefined[CustomerIdRef]												undefined[City]						undefined[Street]						undefined[Prints]						undefined[ActivFrom]						undefined[ActivTo]						undefined[Note]						undefined[IsDeliveryAddress]					) VALUES (			Test_Address									undefined[CustomerIdRef]												undefined[City]						undefined[Street]						undefined[Prints]						undefined[ActivFrom]						undefined[ActivTo]						undefined[Note]						undefined[IsDeliveryAddress]													undefined CONVERT([int], 8)														undefined CONVERT([nvarchar](60), CONCAT('City_', CAST(97 AS INT)))							undefined CONVERT([nvarchar](60), CONCAT('Street_', CAST(57 AS INT)))							undefined CONVERT([int], 10)							undefined CONVERT([datetime], DATEADD(DAY, CAST(7 AS INT), GETDATE()))							undefined CONVERT([datetime], DATEADD(DAY, CAST(15 AS INT), GETDATE()))							undefined CONVERT([nvarchar](300), CONCAT('Note_', CAST(69 AS INT)))							undefined CONVERT([bit], 0)						);		-- SET IDENTITY_INSERT Test_Address OFF -- To revert the identity insert to it's original value	  SUPPORT CODESupport file: src\pages\charts\charts-component\charts.component.ts================================================================================================================================================================================import { Component, ViewChild } from '@angular/core';import { NavController } from 'ionic-angular';import Chart from 'chart.js';@Component({	selector: 'page-charts',	templateUrl: 'charts.html'})export class ChartsComponent {	// AJP-SECTION Children -->	// AJP-SECTION Variabes -->	constructor(public navCtrl: NavController) {	}	ionViewDidLoad() {		// AJP-SECTION OnViewLoad -->	}	getChart(context, chartType, data, options?) {		return new Chart(context, {		  type: chartType,		  data: data,		  options: options		});	}	// AJP-SECTION Methods -->}================================================================================================================================================================================Support file: src\pages\charts\charts-component\charts.component.ts================================================================================================================================================================================import { NgModule } from '@angular/core';import { CommonModule } from '@angular/common';import { SharedModule } from '../../app/shared/shared.module';import { ChartsComponent } from './charts-component/charts.component';@NgModule({  declarations: [	ChartsComponent  ],  imports: [	  CommonModule,	  SharedModule  ],  exports: [	ChartsComponent  ],  entryComponents:[	  ChartsComponent  ]})export class ChartsModule {}================================================================================================================================================================================Support file: src\pages\charts\charts-component\charts.component.ts================================================================================================================================================================================import { NgModule } from '@angular/core';import { CommonModule } from '@angular/common';import { SharedModule } from '../../app/shared/shared.module';import { ChartsComponent } from './charts-component/charts.component';@NgModule({  declarations: [	ChartsComponent  ],  imports: [	  CommonModule,	  SharedModule  ],  exports: [	ChartsComponent  ],  entryComponents:[	  ChartsComponent  ]})export class ChartsModule {}================================================================================================================================================================================